require(bookdown)
require(knitr)
library("bookdown", lib.loc="~/svn/R/r-devel/build/library")
unlink('index_cache', recursive = TRUE)
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
install.packages(c("BH", "colorspace", "FactoMineR", "git2r", "Rcpp", "slam"))
require(bookdown)
require(knitr)
require(bookdown)
require(knitr)
require(rmarkdown)
require(knitr)
require(bookdown)
unlink('index_cache', recursive = TRUE)
?glm
x <- c(0,1,1,0,0,1,0,1,0)
y = c(0, 0.5, 0.4, 0, 0, 0.6, 0, 0.5, 0)
glm(x ~ y, family = "binomial")
summary(glm(x ~ y, family = "binomial"))
summary(glm(as.factor(x) ~ y, family = "binomial"))
plot(x, y)
x <- as.factor(x)
summary(glm(x ~ y, family = "binomial"))
plot(x, y)
summary(glm(x ~ y, family = "binomial"))
summary(lm(x ~ y))
summary(glm(x ~ y))
summary(glm(x ~ y, family = "binomial"))
glm(x ~ y, family = "binomial")
summary(glm(x ~ y, family = "binomial"))
require(GenABEL)
?polygenic
today <- date()
today <- unlist(strsplit(today, split=" "))
today <- paste(today[2], today[3], today[5], sep="-")
today
date()
date('%y')
date(%y)
?date
format(Sys.time(), "%a %b %d %H:%M:%S %Y")
format(Sys.time(), "%a %b %d %Y")
format(Sys.time(), "%a %b-%d_%Y")
format(Sys.time(), "%a_%b_%d_%Y")
?ibs
require(GenABEL.data)
data(ge03d2c)
set.seed(7)
# compute IBS based on a random sample of 1000 autosomal marker
selectedSnps <- sample(autosomal(ge03d2c),1000,replace=FALSE)
a <- ibs(ge03d2c,snps=selectedSnps)
a[1:5,1:5]
mds <- cmdscale(as.dist(1-a))
plot(mds)
# identify smaller cluster of outliers
km <- kmeans(mds,centers=2,nstart=1000)
cl1 <- names(which(km$cluster==1))
cl2 <- names(which(km$cluster==2))
if (length(cl1) > length(cl2)) cl1 <- cl2;
cl1
# PAINT THE OUTLIERS IN RED
points(mds[cl1,],pch=19,col="red")
# compute genomic kinship matrix to be used with e.g. polygenic, mmscore, etc
a <- ibs(ge03d2c,snps=selectedSnps,weight="freq")
a[1:5,1:5]
# now replace diagonal with EIGENSTRAT-type of diaganal to be used for egscore
diag(a) <- hom(ge03d2c[,autosomal(ge03d2c)])$Var
a[1:5,1:5]
ibsFreq <- ibs(ge03d2c,snps=selectedSnps, weight="freq")
ibsEvar <- ibs(ge03d2c,snps=selectedSnps, weight="eVar")
mdsEvar <- cmdscale( as.dist( 0.5 - ibsEvar ) )
plot(mdsEvar)
outliers <- (mdsEvar[,1]>0.1)
ibsFreq[upper.tri(ibsFreq,diag=TRUE)] <- NA
ibsEvar[upper.tri(ibsEvar,diag=TRUE)] <- NA
plot(ibsEvar,ibsFreq)
points(ibsEvar[outliers,outliers],ibsFreq[outliers,outliers],col="red")
?dput
?mmscore
data(ge03d2.clean)
#take half for speed
ge03d2.clean <- ge03d2.clean[1:100,]
gkin <- ibs(ge03d2.clean,w="freq")
h2ht <- polygenic(height ~ sex + age,kin=gkin,ge03d2.clean)
h2ht$est
mm <- mmscore(h2ht,data=ge03d2.clean)
# compute grammar
gr <- qtscore(h2ht$pgres,data=ge03d2.clean,clam=FALSE)
#compute GC
gc <- qtscore(height ~ sex + age,data=ge03d2.clean)
#compare
plot(mm,df="Pc1df",cex=0.5)
add.plot(gc,df="Pc1df",col="red")
add.plot(gr,df="Pc1df",col="lightgreen",cex=1.1)
plot(mm,df="Pc1df",cex=0.5)
add.plot(gc,df="Pc1df",col="red", cex = 1.2, pch = 19)
add.plot(gr,df="Pc1df",col="cadetblue",cex=1.1)
paste0("GWAS_resultsTable_test_", today, ".gz")
today <- format(Sys.time(), "%a_%b_%d_%Y")
paste0("GWAS_resultsTable_test_", today, ".gz")
paste(getwd())
paste(getwd(), 'GWAS_output')
paste0(getwd(), '/GWAS_output')
workdir <- paste0(getwd(), '/GWAS_output')
paste(workdir, today, sep="/")
library(scholar)
library(ggplot2)
cit <- get_citation_history('iEhBavEAAAAJ')
ggplot(cit,aes(x=year,y=cites))+
geom_bar(stat='identity')+
theme_bw()+
xlab('Year of citation')+
ylab('Google Scholar\n cites')+
annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),x=-Inf,y=Inf,vjust=1.5,hjust=-0.05,size=3,colour='gray')
?scholar
predict_h_index('iEhBavEAAAAJ')
predict_h_index('iEhBavEAAAAJ')
setwd("~/gitrepos/Miles_CV")
png('scholar_citations_iEhBavEAAAAJ.png', width=800, height=300, res=150)
ggplot(cit,aes(x=year,y=cites))+
geom_bar(stat='identity')+
theme_bw()+
xlab('Year of citation')+
ylab('Google Scholar\n cites')+
annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),x=-Inf,y=Inf,vjust=1.5,hjust=-0.05,size=3,colour='gray')
dev.off()
cit
?get_citation_history
pubs <- get_publications('iEhBavEAAAAJ')
pubs
get_num_top_journals('iEhBavEAAAAJ')
get_num_distinct_journals('iEhBavEAAAAJ')
get_num_articles('iEhBavEAAAAJ')
cit <- get_citation_history('iEhBavEAAAAJ')
png('scholar_plot/scholar_citations_iEhBavEAAAAJ.png', width=800, height=300, res=150)
ggplot(cit,aes(x=year,y=cites))+
geom_bar(stat='identity')+
theme_bw()+
xlab('Year of citation')+
ylab('Google Scholar\n cites')+
annotate('text',label=format(Sys.time(), "%Y-%m-%d %H:%M:%S %Z"),x=-Inf,y=Inf,vjust=1.5,hjust=-0.05,size=3,colour='gray')
dev.off()
## END
cit
20*12
install.packages(c("ape", "biomartr", "data.table", "digest", "e1071", "flexdashboard", "ggthemes", "htmlTable", "lmtest", "mgcv", "mice", "nleqslv", "nlme", "pROC", "RcppArmadillo", "stringr"))
install.packages("rvest")
